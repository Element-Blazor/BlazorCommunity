@page "/account/register"
@inject UserManager<IdentityUser> userManager
@inject NavigationManager navigationManager
<div class="login-container">
    <h1 class="title">Register</h1>

    <EditForm Model="@registerAccountModel" OnValidSubmit="@RegisterUser">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="field">
            <label class="label">E-mail</label>
            <div class="control">
                <InputText name="email" id="email" class="input" type="email" @bind-Value="@registerAccountModel.Email"></InputText>
            </div>
        </div>
        <div class="field">
            <label class="label">Password</label>
            <div class="control">
                <InputText id="password" class="input" type="password" @bind-Value="@registerAccountModel.Password"></InputText>
            </div>
        </div>
        <div class="field">
            <label class="label">Confirm password</label>
            <div class="control">
                <InputText id="cpassword" class="input" type="password" @bind-Value="@registerAccountModel.ConfirmPassword"></InputText>
            </div>
        </div>
        <div class="field">
            <div class="control">
                <button type="submit" class="button is-primary">Register</button>
            </div>
        </div>
    </EditForm>
</div>
@code {

    private RegisterAccountModel registerAccountModel = new RegisterAccountModel();

    private async Task RegisterUser()
    {
        var result = await userManager.CreateAsync(new IdentityUser { UserName = registerAccountModel.Email, Email = registerAccountModel.Email, EmailConfirmed = true }, registerAccountModel.Password);

        if (result.Succeeded)
        {
            navigationManager.NavigateTo("account/signin");
            return;
        }
    }

    public class RegisterAccountModel
    {
        [Required]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
        [Required]
        [Compare(nameof(Password))]
        public string ConfirmPassword { get; set; }
    }
}